{"version":3,"sources":["views/base/forms/OnboardStaff.js","views/pages/admin/Onboard.js"],"names":["EmployeeForm","history","useHistory","dispatch","useDispatch","useState","staffdetails","setStaffDetails","users","useSelector","state","handeleInputChange","e","name","target","value","useLayoutEffect","fetchUsers","submitForm","a","createUser","id","push","className","xs","md","row","sm","htmlFor","placeholder","required","onChange","type","custom","length","map","usr","firstname","lastname","staff_id","size","color","onClick","goBack","Onboard"],"mappings":"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","file":"static/js/12.649e3716.chunk.js","sourcesContent":["import React, { useState, useLayoutEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { createUser } from \"../../../redux/actions\";\nimport { useHistory } from \"react-router-dom\";\nimport { fetchUsers } from \"../../../redux/actions\";\nimport { CButton, CCard, CCardBody, CCardFooter, CCardHeader, CCol, CForm, CFormGroup, CInput, CLabel, CSelect, CRow } from \"@coreui/react\";\nimport CIcon from \"@coreui/icons-react\";\n\nconst EmployeeForm = () => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const [staffdetails, setStaffDetails] = useState({});\n  const state = useSelector(state => state);\n  const users = state.users.users;\n\n  const handeleInputChange = e => {\n    const name = e.target.name;\n    const value = e.target.value;\n    setStaffDetails(() => {\n      staffdetails[name] = value;\n      return { ...staffdetails };\n    });\n  };\n\n  useLayoutEffect(() => {\n    dispatch(fetchUsers());\n  }, [dispatch]);\n\n  const submitForm = async () => {\n    const response = await dispatch(createUser(staffdetails));\n    if (response.id) {\n      history.push(\"/admin/employees\");\n    }\n  };\n\n  return (\n    <>\n      <CRow className=\"d-flex justify-content-center\">\n        <CCol xs=\"12\" md=\"6\">\n          <CCard>\n            <CCardHeader className=\"p-8 \">\n              <strong>Onboard New Employee</strong>\n            </CCardHeader>\n            <CCardBody>\n              <CForm className=\"form-horizontal\">\n                <CFormGroup row>\n                  <CCol md=\"6\">\n                    <CLabel>\n                      <strong>Input Employee Details</strong>\n                    </CLabel>\n                  </CCol>\n                </CFormGroup>\n                <CFormGroup row>\n                  <CCol sm=\"12\" md=\"4\">\n                    <CLabel htmlFor=\"lastname\">Lastname</CLabel>\n                    <CInput id=\"lastname\" name=\"lastname\" placeholder=\"Lastname\" required onChange={handeleInputChange} />\n                  </CCol>\n                  <CCol sm=\"12\" md=\"4\">\n                    <CLabel htmlFor=\"firstname\">FIrstname</CLabel>\n                    <CInput id=\"firstname\" name=\"firstname\" placeholder=\"Firstname\" required onChange={handeleInputChange} />\n                  </CCol>\n                  <CCol sm=\"12\" md=\"4\">\n                    <CLabel htmlFor=\"middlename\">Othernames</CLabel>\n                    <CInput id=\"middlename\" name=\"middlename\" placeholder=\"middlename\" onChange={handeleInputChange} />\n                  </CCol>\n                </CFormGroup>\n                <CFormGroup row>\n                  <CCol sm=\"12\" md=\"4\">\n                    <CLabel htmlFor=\"annual_leave\">Annual Leave Bal.</CLabel>\n                    <CInput id=\"annual_leave\" name=\"annual_leave\" type=\"number\" placeholder=\"No of days\" required onChange={handeleInputChange} />\n                  </CCol>\n                  <CCol sm=\"12\" md=\"4\">\n                    <CLabel htmlFor=\"sick_leave\">Sick Leave Bal.</CLabel>\n                    <CInput id=\"sick_leave\" name=\"sick_leave\" type=\"number\" placeholder=\"No of days\" required onChange={handeleInputChange} />\n                  </CCol>\n                  <CCol sm=\"12\" md=\"4\">\n                    <CLabel htmlFor=\"othernames\">Exam Leave Bal.</CLabel>\n                    <CInput id=\"othernames\" name=\"exam_leave\" type=\"number\" placeholder=\"No of days\" onChange={handeleInputChange} />\n                  </CCol>\n                </CFormGroup>\n\n                <CFormGroup row>\n                  <CCol md=\"6\">\n                    <CLabel htmlFor=\"compassionate_leave\">Compassionate Leave Bal</CLabel>\n                    <CInput\n                      id=\"compassionate_leave\"\n                      name=\"compassionate_leave\"\n                      type=\"number\"\n                      placeholder=\"No of days\"\n                      onChange={handeleInputChange}\n                    />\n                  </CCol>\n                  <CCol md=\"6\">\n                    <CLabel htmlFor=\"staff_id\">Staff ID</CLabel>\n                    <CInput id=\"staff_id\" name=\"staff_id\" placeholder=\"Employee ID No.\" onChange={handeleInputChange} />\n                  </CCol>\n                </CFormGroup>\n\n                <CFormGroup row>\n                  <CCol sm=\"12\" md=\"6\">\n                    <CLabel htmlFor=\"line_manager\">Direct Line Manager</CLabel>\n                    <CSelect custom name=\"line_manager\" id=\"line_manager\" onChange={handeleInputChange}>\n                      <option value=\"0\">Select Employee</option>\n                      {users &&\n                        users.length &&\n                        users.map(usr => <option key={usr.staff_id} value={usr.id}>{`${usr.firstname} ${usr.lastname}`}</option>)}\n                    </CSelect>\n                  </CCol>\n                  <CCol md=\"6\">\n                    <CLabel htmlFor=\"role\">Role</CLabel>\n                    <CSelect custom name=\"role\" id=\"role\" onChange={handeleInputChange}>\n                      <option value=\"\">Select Role</option>\n                      <option value=\"ADMIN\">ADMIN</option>\n                      <option value=\"STAFF\">STAFF</option>\n                      <option value=\"MANAGER\">LINE MANAGER</option>\n                    </CSelect>\n                  </CCol>\n                </CFormGroup>\n              </CForm>\n            </CCardBody>\n            <CCardFooter className=\"d-flex justify-content-between\">\n              <CButton type=\"submit\" size=\"sm\" color=\"primary\" onClick={submitForm}>\n                <CIcon name=\"cil-scrubber\" /> Submit\n              </CButton>\n              <CButton type=\"reset\" size=\"sm\" color=\"danger\" onClick={() => history.goBack()}>\n                <CIcon name=\"cil-ban\" /> Cancel\n              </CButton>\n            </CCardFooter>\n          </CCard>\n        </CCol>\n      </CRow>\n    </>\n  );\n};\n\nexport default EmployeeForm;\n","import React from \"react\";\nimport OnoardStaff from \"../../base/forms/OnboardStaff\";\n\nconst Onboard = () => {\n  return (\n    <div>\n      <OnoardStaff />\n    </div>\n  );\n};\n\nexport default Onboard;\n"],"sourceRoot":""}