{"version":3,"sources":["views/base/tables/users/Staff.js","views/pages/employee/LeaveHistory.js"],"names":["LeaveHistory","state","useSelector","dispatch","useDispatch","history","useHistory","leaves","leaveRequests","leave_updated","handleRequestDetails","e","preventDefault","id","target","classList","push","useEffect","fetchLeaves","handleStatusUpdate","a","Swal","fire","html","confirmButtonText","showCancelButton","preConfirm","Promise","resolve","reject","status","document","getElementById","value","then","updateStatus","response","text","icon","button","timer","handleDelete","deleteLeave","className","fluid","style","width","length","height","fontSize","responsive","scope","map","entry","index","staff","firstname","lastname","staff_id","type","leave_start","leave_end","duration","relieve_staff","to","color","maxWidth","Date","toDateString","displayDetails","deleteKey","updateKey","statusUpdate","StaffLeaveHistory"],"mappings":"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","file":"static/js/11.6311c3bc.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Card, Table, Container, Row } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchLeaves, updateStatus, deleteLeave } from \"../../../../redux/actions\";\nimport { TheHeaderDropdownTasks } from \"../../../../containers\";\nimport Swal from \"sweetalert2\";\n\nconst LeaveHistory = () => {\n  const state = useSelector(state => state);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const { leaves: leaveRequests, leave_updated } = state.leaves;\n\n  const handleRequestDetails = e => {\n    e.preventDefault();\n    const id = e.target.classList[0];\n    return history.push(`/admin/employee/details/${id}`);\n  };\n\n  useEffect(() => {\n    dispatch(fetchLeaves());\n  }, [leave_updated, dispatch]);\n\n  const handleStatusUpdate = async e => {\n    e.preventDefault();\n    const id = e.target.id;\n\n    Swal.fire({\n      html: `\n      <form class=\"row\">\n      <h3 class=\"py-3\">Update Leave Request Status</h3>\n    <select id=\"update-status\" class=\"form-control form-control-lg\">\n      <option value=\"\">--Choose a Status--</option>\n      <option value=\"APPROVED\">APPROVED</option>\n      <option value=\"REJECTED\">REJECTED</option>\n      <option value=\"PENDING\">PENDING</option>\n    </select>\n    </form>\n      `,\n      confirmButtonText: \"Confirm\",\n      showCancelButton: true,\n      preConfirm: function() {\n        return new Promise((resolve, reject) => {\n          resolve({\n            status: document.getElementById(\"update-status\").value\n          });\n        });\n      }\n    }).then(async ({ value }) => {\n      if (value) {\n        const response = await dispatch(updateStatus(id, value));\n        return response.status\n          ? Swal.fire({\n              text: \"Update Successful\",\n              icon: \"success\",\n              button: false,\n              timer: 2000\n            })\n          : Swal.fire({\n              text: \"Error updating Status\",\n              icon: \"error\",\n              timer: 1500\n            });\n      }\n      return Swal.fire({\n        text: \"Error updating Status\",\n        icon: \"error\",\n        timer: 1500\n      });\n    });\n  };\n\n  const handleDelete = e => {\n    e.preventDefault();\n    const id = e.target.id;\n\n    Swal.fire({\n      text: \"Confirm Delete? This action is irreversible\",\n      confirmButtonText: \"Confirm\",\n      showCancelButton: true\n    }).then(async ({ value }) => {\n      if (value) {\n        await dispatch(deleteLeave(id));\n        return Swal.fire({\n          text: \"Delete Successful\",\n          icon: \"success\",\n          button: false,\n          timer: 2000\n        });\n      } else {\n        Swal.fire({\n          text: \"Goodbye\",\n          icon: \"warn\",\n          timer: 1000\n        });\n      }\n    });\n  };\n\n  return (\n    <>\n      <div>\n        <div className=\"pb-5 pt-5 pt-md-8\">\n          <Container fluid style={{ width: \"97%\" }}>\n            {!leaveRequests.length && (\n              <div style={{ height: \"70vh\" }}>\n                <div className=\"bg-white\">\n                  <div\n                    className=\"d-flex flex-column justify-content-center align-items-center text-dark\"\n                    style={{ height: \"30vh\", fontSize: \"17px\" }}>\n                    <p className=\"pb-0 mb-1 font-weight-bold\">You don't have any leave requests for now.</p>\n                  </div>\n                </div>\n              </div>\n            )}\n            {leaveRequests.length > 0 && (\n              <>\n                <Row>\n                  <div className=\"col\">\n                    <Card className=\"shadow p-0\">\n                      <Table className=\"align-items-center table-flush\" responsive>\n                        <thead className=\"thead-light\">\n                          <tr>\n                            <th scope=\"col\">Staff ID</th>\n                            <th scope=\"col\">Name</th>\n                            <th scope=\"col\">Type</th>\n                            <th scope=\"col\">Starts</th>\n                            <th scope=\"col\">Ends</th>\n                            <th scope=\"col\">Duration</th>\n                            <th scope=\"col\">Relieve Staff</th>\n                            <th scope=\"col\">Status</th>\n                            <th scope=\"col\" />\n                          </tr>\n                        </thead>\n\n                        <tbody>\n                          {leaveRequests.map((entry, index) => {\n                            const {\n                              id,\n                              staff: { firstname, lastname, staff_id },\n                              type,\n                              leave_start,\n                              leave_end,\n                              duration,\n                              relieve_staff,\n                              status\n                            } = entry;\n                            return (\n                              <tr key={index}>\n                                <th scope=\"row\">\n                                  <Link to={`/employees/${staff_id}`} style={{ color: \"black\" }}>\n                                    <div className=\"pl-3\">\n                                      <span className=\"mb-0 text-sm d-inline-block text-truncate\" style={{ maxWidth: \"150px\" }}>\n                                        {staff_id}\n                                      </span>\n                                    </div>\n                                  </Link>\n                                </th>\n                                <td>{`${firstname} ${lastname}`}</td>\n                                <td>{type}</td>\n                                <td>\n                                  <div>{new Date(leave_start).toDateString()}</div>\n                                </td>\n                                <td>\n                                  <div>{new Date(leave_end).toDateString()}</div>\n                                </td>\n                                <td>\n                                  <div>{duration}</div>\n                                </td>\n                                <td>\n                                  <div>{`${relieve_staff.firstname} ${relieve_staff.lastname}`}</div>\n                                </td>\n                                <td>\n                                  <div>{status}</div>\n                                </td>\n                                <td className=\"text-right\">\n                                  <span>\n                                    <TheHeaderDropdownTasks\n                                      // detailsKey={\"View Details\"}\n                                      id={id}\n                                      displayDetails={handleRequestDetails}\n                                      handleDelete={handleDelete}\n                                      deleteKey={\"Delete Request\"}\n                                      updateKey={\"Update Status\"}\n                                      statusUpdate={handleStatusUpdate}\n                                    />\n                                  </span>\n                                </td>\n                              </tr>\n                            );\n                          })}\n                        </tbody>\n                      </Table>\n                    </Card>\n                  </div>\n                </Row>\n              </>\n            )}\n          </Container>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default LeaveHistory;\n","import React from \"react\";\nimport LeaveHistory from \"../../base/tables/users/Staff\";\n\nconst StaffLeaveHistory = () => {\n  return (\n    <div>\n      <h2>Leave History</h2>\n      <LeaveHistory />\n    </div>\n  );\n};\n\nexport default StaffLeaveHistory;\n"],"sourceRoot":""}