{"version":3,"sources":["views/base/forms/LeaveRequest.js","views/pages/employee/LeaveRequest.js"],"names":["LeaveRequest","history","useHistory","alert","useAlert","dispatch","useDispatch","state","useSelector","users","loggedinUser","user","results","useState","availableDays","setavailableDays","formValues","setFormValues","useLayoutEffect","type","fetchUsers","fetchUser","user_id","onInputChange","e","name","target","value","handleSubmit","a","Object","keys","length","show","duration","data","leave_start","Date","leave_end","resumption_date","createLeaveRequest","id","push","className","xs","md","action","method","encType","row","sm","htmlFor","custom","onChange","placeholder","required","filter","usr","map","firstname","lastname","staff_id","rows","line_manager","size","color","onClick","goBack"],"mappings":"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","file":"static/js/16.688774dd.chunk.js","sourcesContent":["import React, { useState, useLayoutEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { createLeaveRequest } from \"../../../redux/actions\";\nimport { fetchUsers, fetchUser } from \"../../../redux/actions\";\nimport { useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { useAlert } from \"react-alert\";\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardFooter,\n  CCardHeader,\n  CCol,\n  CForm,\n  CFormGroup,\n  CTextarea,\n  CInput,\n  CLabel,\n  CSelect,\n  CRow\n} from \"@coreui/react\";\nimport CIcon from \"@coreui/icons-react\";\n\nconst LeaveRequest = () => {\n  const history = useHistory();\n  const alert = useAlert();\n  const dispatch = useDispatch();\n  const state = useSelector(state => state);\n  const { loggedinUser, user } = state.users;\n  const users = state.users.users.results;\n  const [availableDays, setavailableDays] = useState(\"\");\n  const [formValues, setFormValues] = useState({});\n\n  useLayoutEffect(() => {\n    setavailableDays(loggedinUser[formValues.type]);\n    dispatch(fetchUsers());\n    dispatch(fetchUser(loggedinUser.user_id));\n  }, [formValues.type, loggedinUser, dispatch]);\n\n  const onInputChange = e => {\n    const name = e.target.name;\n    const value = e.target.value;\n    setFormValues(() => {\n      formValues[name] = value;\n      return { ...formValues };\n    });\n  };\n\n  const handleSubmit = async () => {\n    if (Object.keys(formValues).length < 6) {\n      return alert.show(\"Please complete all fields\");\n    }\n    if (formValues.duration > availableDays) {\n      return alert.show(\"You can only take \" + availableDays + \" days\");\n    }\n    if (formValues.duration >= 14) {\n      return alert.show(\"Please input a duration below 14 days\");\n    }\n    const data = {\n      ...formValues,\n      leave_start: new Date(formValues.leave_start),\n      leave_end: new Date(formValues.leave_end),\n      resumption_date: new Date(formValues.resumption_date)\n    };\n    const response = await dispatch(createLeaveRequest(data));\n    if (response.id) {\n      history.push(\"/employee/summary\");\n    }\n  };\n\n  return (\n    <>\n      <CRow className=\"d-flex justify-content-center\">\n        <CCol xs=\"12\" md=\"6\">\n          <CCard>\n            <CCardHeader className=\"p-8 \">\n              <strong>Leave Request Form</strong>\n            </CCardHeader>\n            <CCardBody>\n              <CForm action=\"\" method=\"post\" encType=\"multipart/form-data\" className=\"form-horizontal\">\n                {availableDays && (\n                  <CFormGroup row>\n                    <CCol md=\"3\">\n                      <CLabel>\n                        <strong>Availabe Days:</strong>\n                      </CLabel>\n                    </CCol>\n                    <CCol xs=\"12\" md=\"9\">\n                      <p className=\"form-control-static\">\n                        <strong>{availableDays}</strong>\n                      </p>\n                    </CCol>\n                  </CFormGroup>\n                )}\n                <CFormGroup row>\n                  <CCol sm=\"12\" md=\"6\">\n                    <CLabel htmlFor=\"type\">Leave Type</CLabel>\n                    <CSelect custom name=\"type\" id=\"type\" onChange={onInputChange}>\n                      <option value=\"\">Select Leave Type</option>\n                      <option value=\"annual_leave\">Annual Leave</option>\n                      <option value=\"exam_leave\">Examination Leave</option>\n                      <option value=\"sick_leave\">Sick Leave</option>\n                      <option value=\"compassionate_leave\">Compassionate Leave</option>\n                    </CSelect>\n                  </CCol>\n                  <CCol md=\"6\">\n                    <CLabel htmlFor=\"duration\">Duration</CLabel>\n                    <CInput id=\"duration\" name=\"duration\" type=\"number\" placeholder=\"Number of days\" onChange={onInputChange} required />\n                  </CCol>\n                </CFormGroup>\n\n                <CFormGroup row>\n                  <CCol sm=\"12\" md=\"6\">\n                    <CLabel htmlFor=\"leave_start\">Start</CLabel>\n                    <CInput type=\"date\" id=\"leave_start\" name=\"leave_start\" placeholder=\"date\" onChange={onInputChange} />\n                  </CCol>\n                  <CCol sm=\"12\" md=\"6\">\n                    <CLabel htmlFor=\"leave_end\">End</CLabel>\n                    <CInput type=\"date\" id=\"leave_end\" name=\"leave_end\" placeholder=\"date\" onChange={onInputChange} />\n                  </CCol>\n                </CFormGroup>\n                <CFormGroup row>\n                  <CCol sm=\"12\" md=\"6\">\n                    <CLabel htmlFor=\"resumption_date\">Resumption Date</CLabel>\n                    <CInput type=\"date\" id=\"resumption_date\" name=\"resumption_date\" placeholder=\"date\" onChange={onInputChange} />\n                  </CCol>\n                  <CCol sm=\"12\" md=\"6\">\n                    <CLabel htmlFor=\"relieve_staff\">Relieve Staff</CLabel>\n                    <CSelect custom name=\"relieve_staff\" id=\"relieve_staff\" onChange={onInputChange}>\n                      <option value=\"\">Select Employee</option>\n                      {users &&\n                        users.length &&\n                        users\n                          .filter(usr => usr.id !== loggedinUser.user_id)\n                          .map(usr => <option key={usr.staff_id} value={usr.id}>{`${usr.firstname} ${usr.lastname}`}</option>)}\n                    </CSelect>\n                  </CCol>\n                </CFormGroup>\n\n                <CFormGroup row>\n                  <CCol sm=\"12\">\n                    <CLabel htmlFor=\"description\">Description</CLabel>\n                    <CTextarea name=\"description\" id=\"description\" rows=\"4\" placeholder=\"Tell us why...\" onChange={onInputChange} />\n                  </CCol>\n                </CFormGroup>\n              </CForm>\n              <div>Reporting Manager: {user.id && user.line_manager.firstname + \" \" + user.line_manager.lastname}</div>\n            </CCardBody>\n            <CCardFooter className=\"d-flex justify-content-between\">\n              <CButton type=\"submit\" size=\"sm\" color=\"primary\" onClick={handleSubmit}>\n                <CIcon name=\"cil-scrubber\" /> Submit\n              </CButton>\n              <CButton type=\"reset\" size=\"sm\" color=\"danger\" onClick={() => history.goBack()}>\n                <CIcon name=\"cil-ban\" /> Cancel\n              </CButton>\n            </CCardFooter>\n          </CCard>\n        </CCol>\n      </CRow>\n    </>\n  );\n};\n\nexport default LeaveRequest;\n","import React from \"react\";\nimport LeaveRequestForm from \"../../base/forms/LeaveRequest\"\n\nconst LeaveRequest = () => {\n  return (\n    <div>\n      <LeaveRequestForm />\n    </div>\n  );\n};\n\nexport default LeaveRequest;\n"],"sourceRoot":""}