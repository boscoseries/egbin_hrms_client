{"version":3,"sources":["views/pages/admin/Employees.js"],"names":["Employees","state","useSelector","dispatch","useDispatch","history","useHistory","users","results","employee_updated","useEffect","fetchUsers","deleteEmployee","e","preventDefault","id","target","Swal","fire","text","confirmButtonText","showCancelButton","then","a","value","deleteRecord","icon","button","timer","className","fluid","style","width","height","fontSize","length","responsive","scope","map","entry","index","firstname","lastname","middlename","staff_id","annual_leave","sick_leave","exam_leave","compassionate_leave","relieve_staff","role","line_manager","deleteKey","handleDelete","updateKey","statusUpdate","push"],"mappings":"mQAuKeA,UA/JG,WAChB,IAAMC,EAAQC,aAAY,SAAAD,GAAK,OAAIA,KAC7BE,EAAWC,cACXC,EAAUC,cACVC,EAAQN,EAAMM,MAAMA,MAAMC,QACxBC,EAAqBR,EAAMM,MAA3BE,iBAQRC,qBAAU,WACRP,EAASQ,iBACR,CAACR,EAAUM,IAEd,IAAMG,EAAiB,SAAAC,GACrBA,EAAEC,iBACF,IAAMC,EAAKF,EAAEG,OAAOD,GAEpBE,IAAKC,KAAK,CACRC,KAAM,8CACNC,kBAAmB,UACnBC,kBAAkB,IACjBC,KAJH,uCAIQ,uBAAAC,EAAA,4DAASC,MAAT,gCAEErB,EAASsB,YAAaV,IAFxB,gCAGGE,IAAKC,KAAK,CACfC,KAAM,oBACNO,KAAM,UACNC,QAAQ,EACRC,MAAO,OAPL,OAUJX,IAAKC,KAAK,CACRC,KAAM,UACNO,KAAM,QACNE,MAAO,MAbL,2CAJR,wDAuBF,OAAKrB,EAGH,qCACE,kDACA,8BACE,qBAAKsB,UAAU,oBAAf,SACE,eAAC,IAAD,CAAWC,OAAK,EAACC,MAAO,CAAEC,MAAO,OAAjC,WACIzB,GACA,qBAAKwB,MAAO,CAAEE,OAAQ,QAAtB,SACE,qBAAKJ,UAAU,WAAf,SACE,qBACEA,UAAU,yEACVE,MAAO,CAAEE,OAAQ,OAAQC,SAAU,QAFrC,SAGE,mBAAGL,UAAU,6BAAb,oEAKPtB,EAAM4B,OAAS,GACd,mCACE,cAAC,IAAD,UACE,qBAAKN,UAAU,MAAf,SACE,cAAC,IAAD,CAAMA,UAAU,aAAhB,SACE,eAAC,IAAD,CAAOA,UAAU,iCAAiCO,YAAU,EAA5D,UACE,uBAAOP,UAAU,cAAjB,SACE,+BACE,oBAAIQ,MAAM,MAAV,sBACA,oBAAIA,MAAM,MAAV,uBACA,oBAAIA,MAAM,MAAV,sBACA,oBAAIA,MAAM,MAAV,wBACA,oBAAIA,MAAM,MAAV,0BACA,oBAAIA,MAAM,MAAV,wBACA,oBAAIA,MAAM,MAAV,wBACA,oBAAIA,MAAM,MAAV,4BACA,oBAAIA,MAAM,MAAV,0BACA,oBAAIA,MAAM,MAAV,kBACA,oBAAIA,MAAM,aAId,gCACG9B,EAAM+B,KAAI,SAACC,EAAOC,GAAW,IAE1BzB,EAYEwB,EAZFxB,GACA0B,EAWEF,EAXFE,UACAC,EAUEH,EAVFG,SACAC,EASEJ,EATFI,WACAC,EAQEL,EARFK,SACAC,EAOEN,EAPFM,aACAC,EAMEP,EANFO,WACAC,EAKER,EALFQ,WAEAC,GAGET,EAJFU,cAIEV,EAHFS,qBACAE,EAEEX,EAFFW,KACAC,EACEZ,EADFY,aAEF,OACE,+BACE,6BACE,iCAASP,MAEX,6BAAKH,IACL,6BACE,8BAAMC,MAER,6BACE,8BAAMC,MAER,6BACE,8BAAME,MAER,6BACE,8BAAME,MAER,6BACE,8BAAMD,MAER,6BACE,8BAAME,MAER,6BACE,8BAAMT,EAAMY,cAAN,UAAyBA,EAAaV,UAAtC,YAAmDU,EAAaT,cAExE,6BACE,8BAAMQ,MAER,oBAAIrB,UAAU,aAAd,SACE,+BACE,cAAC,IAAD,CACEd,GAAIA,EACJqC,UAAW,gBACXC,aAAczC,EACd0C,UAAW,gBACXC,aAAc,kBAAMlD,EAAQmD,KAAR,2BAAiCzC,EAAjC,qBApCnByB,6BA1DlB","file":"static/js/12.533ac0c1.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Card, Table, Container, Row } from \"reactstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchUsers, deleteRecord } from \"../../../redux/actions\";\nimport { TheHeaderDropdownTasks } from \"../../../containers\";\nimport Swal from \"sweetalert2\";\n\nconst Employees = () => {\n  const state = useSelector(state => state);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const users = state.users.users.results;\n  const { employee_updated } = state.users;\n\n  const handleRequestDetails = e => {\n    e.preventDefault();\n    const id = e.target.classList[0];\n    return history.push(`/admin/employee/details/${id}`);\n  };\n\n  useEffect(() => {\n    dispatch(fetchUsers());\n  }, [dispatch, employee_updated]);\n\n  const deleteEmployee = e => {\n    e.preventDefault();\n    const id = e.target.id;\n\n    Swal.fire({\n      text: \"Confirm Delete? This action is irreversible\",\n      confirmButtonText: \"Confirm\",\n      showCancelButton: true\n    }).then(async ({ value }) => {\n      if (value) {\n        await dispatch(deleteRecord(id));\n        return Swal.fire({\n          text: \"Delete Successful\",\n          icon: \"success\",\n          button: false,\n          timer: 2000\n        });\n      } else {\n        Swal.fire({\n          text: \"Goodbye\",\n          icon: \"error\",\n          timer: 1000\n        });\n      }\n    });\n  };\n\n  if (!users) return null;\n\n  return (\n    <>\n      <h2>Manage Employees</h2>\n      <div>\n        <div className=\"pb-5 pt-5 pt-md-8\">\n          <Container fluid style={{ width: \"97%\" }}>\n            {!users && (\n              <div style={{ height: \"70vh\" }}>\n                <div className=\"bg-white\">\n                  <div\n                    className=\"d-flex flex-column justify-content-center align-items-center text-dark\"\n                    style={{ height: \"30vh\", fontSize: \"17px\" }}>\n                    <p className=\"pb-0 mb-1 font-weight-bold\">There are no registered employees at the moment.</p>\n                  </div>\n                </div>\n              </div>\n            )}\n            {users.length > 0 && (\n              <>\n                <Row>\n                  <div className=\"col\">\n                    <Card className=\"shadow p-0\">\n                      <Table className=\"align-items-center table-flush\" responsive>\n                        <thead className=\"thead-light\">\n                          <tr>\n                            <th scope=\"col\">Staff Id</th>\n                            <th scope=\"col\">Firstname</th>\n                            <th scope=\"col\">Lastname</th>\n                            <th scope=\"col\">Middlename</th>\n                            <th scope=\"col\">Annual Leave</th>\n                            <th scope=\"col\">Sick Leave</th>\n                            <th scope=\"col\">Exam Leave</th>\n                            <th scope=\"col\">Compass. Leave</th>\n                            <th scope=\"col\">Line Manager</th>\n                            <th scope=\"col\">Role</th>\n                            <th scope=\"col\" />\n                          </tr>\n                        </thead>\n\n                        <tbody>\n                          {users.map((entry, index) => {\n                            const {\n                              id,\n                              firstname,\n                              lastname,\n                              middlename,\n                              staff_id,\n                              annual_leave,\n                              sick_leave,\n                              exam_leave,\n                              relieve_staff,\n                              compassionate_leave,\n                              role,\n                              line_manager\n                            } = entry;\n                            return (\n                              <tr key={index}>\n                                <td>\n                                  <strong>{staff_id}</strong>\n                                </td>\n                                <td>{firstname}</td>\n                                <td>\n                                  <div>{lastname}</div>\n                                </td>\n                                <td>\n                                  <div>{middlename}</div>\n                                </td>\n                                <td>\n                                  <div>{annual_leave}</div>\n                                </td>\n                                <td>\n                                  <div>{exam_leave}</div>\n                                </td>\n                                <td>\n                                  <div>{sick_leave}</div>\n                                </td>\n                                <td>\n                                  <div>{compassionate_leave}</div>\n                                </td>\n                                <td>\n                                  <div>{entry.line_manager && `${line_manager.firstname} ${line_manager.lastname}`}</div>\n                                </td>\n                                <td>\n                                  <div>{role}</div>\n                                </td>\n                                <td className=\"text-right\">\n                                  <span>\n                                    <TheHeaderDropdownTasks\n                                      id={id}\n                                      deleteKey={\"Delete Record\"}\n                                      handleDelete={deleteEmployee}\n                                      updateKey={\"Update Record\"}\n                                      statusUpdate={() => history.push(`/admin/employees/${id}/update`)}\n                                    />\n                                  </span>\n                                </td>\n                              </tr>\n                            );\n                          })}\n                        </tbody>\n                      </Table>\n                    </Card>\n                  </div>\n                </Row>\n              </>\n            )}\n          </Container>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Employees;\n"],"sourceRoot":""}