{"version":3,"sources":["views/base/title/Title.js","views/base/tables/users/Staff.js","views/pages/employee/LeaveHistory.js"],"names":["Title","containerClass","titleClass","title","lineClass","className","LeaveHistory","state","useSelector","dispatch","useDispatch","history","useHistory","leaveRequests","leaves","useState","queryPage","useLocation","search","match","currentPage","Number","page","setPage","handleRequestDetails","e","preventDefault","id","target","classList","push","useEffect","fetchLeaves","handleStatusUpdate","swal","content","style","border","onChange","console","log","value","buttons","cancel","confirm","dangerMode","closeOnClickOutside","then","a","updateStatus","data","text","icon","button","timer","handleDelete","fluid","width","height","fontSize","length","responsive","scope","map","entry","index","staff","firstname","lastname","staff_id","type","leave_start","leave_end","duration","relieve_staff","status","to","color","maxWidth","Date","toDateString","detailsKey","displayDetails","deleteKey","updateKey","statusUpdate","StaffLeaveHistory"],"mappings":"uKAEe,SAASA,EAAT,GAAmE,IAAjDC,EAAgD,EAAhDA,eAAgBC,EAAgC,EAAhCA,WAAYC,EAAoB,EAApBA,MAAoB,EAAbC,UAClE,OACE,qBAAKC,UAAWJ,EAAhB,SACE,mBAAGI,UAAWH,EAAd,SAA2BC,Q,mMCwLlBG,IAnLM,WACnB,IAAMC,EAAQC,aAAY,SAAAD,GAAK,OAAIA,KAC7BE,EAAWC,cACXC,EAAUC,cACVC,EAAgBN,EAAMO,OAAOA,OAJV,EAKCC,oBAAS,GALV,mBAOnBC,GAPmB,UAOPC,cAAcC,OAAOC,MAAM,gBAAiB,KACxDC,EAAcC,OAAOL,GAAaA,EAAU,GAAKA,EAAU,GAAK,GAR7C,EASDD,mBAASK,GATR,mBASlBE,EATkB,KASZC,EATY,KAWnBC,EAAuB,SAAAC,GAC3BA,EAAEC,iBACF,IAAMC,EAAKF,EAAEG,OAAOC,UAAU,GAC9B,OAAOlB,EAAQmB,KAAR,kCAAwCH,KAGjDI,qBAAU,WACRtB,EAASuB,eACTZ,IAAgBE,GAAQC,EAAQH,KAC/B,IAEH,IAAMa,EAAqB,SAAAR,GACzBA,EAAEC,iBACF,IAAMC,EAAKF,EAAEG,OAAOC,UAAU,GAC9BK,IAAK,8BAA+B,CAClCC,QACE,yBAAQ9B,UAAU,eAAe+B,MAAO,CAAEC,OAAQ,aAAeC,SAAU,SAAAb,GAAC,OAAIc,QAAQC,IAAIf,IAA5F,UACE,wBAAQgB,MAAM,GAAd,iCACA,wBAAQA,MAAM,WAAd,sBACA,wBAAQA,MAAM,WAAd,sBACA,wBAAQA,MAAM,UAAd,wBAGJC,QAAS,CACPC,QAAQ,EACRC,QAAS,WAEXC,YAAY,EACZC,qBAAqB,IACpBC,KAfH,uCAeQ,WAAMN,GAAN,SAAAO,EAAA,0DACFP,EADE,uBAEJF,QAAQC,IAAI,CAAEC,UAFV,SAGmBhC,EAASwC,YAAatB,EAAIc,IAH7C,cAIKS,KACLhB,IAAK,CACHiB,KAAM,oBACNC,KAAM,UACNC,QAAQ,EACRC,MAAO,MAETpB,IAAK,CACHiB,KAAM,wBACNC,KAAM,QACNE,MAAO,OAdT,sBAiBJpB,IAAK,CACHiB,KAAM,mBACNC,KAAM,QACNE,MAAO,OApBL,2CAfR,wDA0CIC,EAAe,aAErB,OAAK1C,EAGH,mCACE,8BACE,qBAAKR,UAAU,oBAAf,SACE,eAAC,IAAD,CAAWmD,OAAK,EAACpB,MAAO,CAAEqB,MAAO,OAAjC,WACI5C,GACA,qBAAKuB,MAAO,CAAEsB,OAAQ,QAAtB,SACE,qBAAKrD,UAAU,WAAf,SACE,qBACEA,UAAU,yEACV+B,MAAO,CAAEsB,OAAQ,OAAQC,SAAU,QAFrC,SAGE,mBAAGtD,UAAU,6BAAb,8DAKPQ,EAAc+C,OAAS,GACtB,qCACE,cAAC,IAAD,CAAO1D,WAAW,mBAAmBC,MAAM,mBAC3C,cAAC,IAAD,UACE,qBAAKE,UAAU,MAAf,SACE,cAAC,IAAD,CAAMA,UAAU,aAAhB,SACE,eAAC,IAAD,CAAOA,UAAU,iCAAiCwD,YAAU,EAA5D,UACE,uBAAOxD,UAAU,cAAjB,SACE,+BACE,oBAAIyD,MAAM,MAAV,sBACA,oBAAIA,MAAM,MAAV,kBACA,oBAAIA,MAAM,MAAV,kBACA,oBAAIA,MAAM,MAAV,oBACA,oBAAIA,MAAM,MAAV,kBACA,oBAAIA,MAAM,MAAV,sBACA,oBAAIA,MAAM,MAAV,2BACA,oBAAIA,MAAM,MAAV,oBACA,oBAAIA,MAAM,aAId,gCACGjD,EAAckD,KAAI,SAACC,EAAOC,GAAW,IAElCtC,EAQEqC,EARFrC,GAFiC,EAU/BqC,EAPFE,MAASC,EAHwB,EAGxBA,UAAWC,EAHa,EAGbA,SAAUC,EAHG,EAGHA,SAC9BC,EAMEN,EANFM,KACAC,EAKEP,EALFO,YACAC,EAIER,EAJFQ,UACAC,EAGET,EAHFS,SACAC,EAEEV,EAFFU,cACAC,EACEX,EADFW,OAGF,OADApC,QAAQC,IAAIkC,GAEV,+BACE,oBAAIZ,MAAM,MAAV,SACE,cAAC,IAAD,CAAMc,GAAE,qBAAgBP,GAAYjC,MAAO,CAAEyC,MAAO,SAApD,SACE,qBAAKxE,UAAU,OAAf,SACE,sBAAMA,UAAU,4CAA4C+B,MAAO,CAAE0C,SAAU,SAA/E,SACGT,UAKT,6BAAK,UAAGF,GAAH,WAAqBC,KAC1B,6BAAKE,IACL,6BACE,8BAAM,IAAIS,KAAKR,GAAaS,mBAE9B,6BACE,8BAAM,IAAID,KAAKP,GAAWQ,mBAE5B,6BACE,8BAAMP,MAER,6BACE,8BAAM,UAAGC,EAAcP,WAAjB,WAAmCO,EAAcN,cAEzD,6BACE,8BAAMO,MAER,oBAAItE,UAAU,aAAd,SACE,+BACE,cAAC,IAAD,CACE4E,WAAY,eACZ5E,UAAWsB,EACXuD,eAAgB1D,EAChB+B,aAAcA,EACd4B,UAAW,iBACXC,UAAW,gBACXC,aAAcpD,UApCbgC,6BArDV,O,oECnEdqB,UATW,WACxB,OACE,gCACE,+CACA,cAAC,IAAD","file":"static/js/9.4bf0fa79.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default function Title ({ containerClass, titleClass, title, lineClass }) {\n  return (\n    <div className={containerClass}>\n      <p className={titleClass}>{title}</p>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { Card, Table, Container, Row } from \"reactstrap\";\nimport Title from \"../../title/Title\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchLeaves, updateStatus } from \"../../../../redux/actions\";\nimport { TheHeaderDropdownTasks } from \"../../../../containers\";\nimport swal from \"@sweetalert/with-react\";\n\nconst LeaveHistory = () => {\n  const state = useSelector(state => state);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const leaveRequests = state.leaves.leaves;\n  const [value, setValue] = useState(false);\n\n  const queryPage = useLocation().search.match(/page=([0-9]+)/, \"\");\n  const currentPage = Number(queryPage && queryPage[1] ? queryPage[1] : 1);\n  const [page, setPage] = useState(currentPage);\n\n  const handleRequestDetails = e => {\n    e.preventDefault();\n    const id = e.target.classList[0];\n    return history.push(`/admin/employee/details/${id}`);\n  };\n\n  useEffect(() => {\n    dispatch(fetchLeaves());\n    currentPage !== page && setPage(currentPage);\n  }, []);\n\n  const handleStatusUpdate = e => {\n    e.preventDefault();\n    const id = e.target.classList[0];\n    swal(\"Update Leave Request Status\", {\n      content: (\n        <select className=\"form-control\" style={{ border: \"2px solid\" }} onChange={e => console.log(e)}>\n          <option value=\"\">--Choose a Status--</option>\n          <option value=\"APPROVED\">APPROVED</option>\n          <option value=\"REJECTED\">REJECTED</option>\n          <option value=\"PENDING\">PENDING</option>\n        </select>\n      ),\n      buttons: {\n        cancel: true,\n        confirm: \"Update!\"\n      },\n      dangerMode: true,\n      closeOnClickOutside: false\n    }).then(async value => {\n      if (value) {\n        console.log({ value });\n        const response = await dispatch(updateStatus(id, value));\n        response.data\n          ? swal({\n              text: \"Update Successful\",\n              icon: \"success\",\n              button: false,\n              timer: 2000\n            })\n          : swal({\n              text: \"Error updating Status\",\n              icon: \"error\",\n              timer: 1500\n            });\n      } else {\n        swal({\n          text: \"Update cancelled\",\n          icon: \"error\",\n          timer: 1200\n        });\n      }\n    });\n  };\n\n\n  const handleDelete = () => {};\n\n  if (!leaveRequests) return null;\n\n  return (\n    <>\n      <div>\n        <div className=\"pb-5 pt-5 pt-md-8\">\n          <Container fluid style={{ width: \"97%\" }}>\n            {!leaveRequests && (\n              <div style={{ height: \"70vh\" }}>\n                <div className=\"bg-white\">\n                  <div\n                    className=\"d-flex flex-column justify-content-center align-items-center text-dark\"\n                    style={{ height: \"30vh\", fontSize: \"17px\" }}>\n                    <p className=\"pb-0 mb-1 font-weight-bold\">You don't have any leave requests for now.</p>\n                  </div>\n                </div>\n              </div>\n            )}\n            {leaveRequests.length > 0 && (\n              <>\n                <Title titleClass=\"title text-white\" title=\"Leave Requests\" />\n                <Row>\n                  <div className=\"col\">\n                    <Card className=\"shadow p-0\">\n                      <Table className=\"align-items-center table-flush\" responsive>\n                        <thead className=\"thead-light\">\n                          <tr>\n                            <th scope=\"col\">Staff ID</th>\n                            <th scope=\"col\">Name</th>\n                            <th scope=\"col\">Type</th>\n                            <th scope=\"col\">Starts</th>\n                            <th scope=\"col\">Ends</th>\n                            <th scope=\"col\">Duration</th>\n                            <th scope=\"col\">Relieve Staff</th>\n                            <th scope=\"col\">Status</th>\n                            <th scope=\"col\" />\n                          </tr>\n                        </thead>\n\n                        <tbody>\n                          {leaveRequests.map((entry, index) => {\n                            const {\n                              id,\n                              staff: { firstname, lastname, staff_id },\n                              type,\n                              leave_start,\n                              leave_end,\n                              duration,\n                              relieve_staff,\n                              status\n                            } = entry;\n                            console.log(relieve_staff);\n                            return (\n                              <tr key={index}>\n                                <th scope=\"row\">\n                                  <Link to={`/employees/${staff_id}`} style={{ color: \"black\" }}>\n                                    <div className=\"pl-3\">\n                                      <span className=\"mb-0 text-sm d-inline-block text-truncate\" style={{ maxWidth: \"150px\" }}>\n                                        {staff_id}\n                                      </span>\n                                    </div>\n                                  </Link>\n                                </th>\n                                <td>{`${firstname}` + ` ${lastname}`}</td>\n                                <td>{type}</td>\n                                <td>\n                                  <div>{new Date(leave_start).toDateString()}</div>\n                                </td>\n                                <td>\n                                  <div>{new Date(leave_end).toDateString()}</div>\n                                </td>\n                                <td>\n                                  <div>{duration}</div>\n                                </td>\n                                <td>\n                                  <div>{`${relieve_staff.firstname}` + ` ${relieve_staff.lastname}`}</div>\n                                </td>\n                                <td>\n                                  <div>{status}</div>\n                                </td>\n                                <td className=\"text-right\">\n                                  <span>\n                                    <TheHeaderDropdownTasks\n                                      detailsKey={\"View Details\"}\n                                      className={id}\n                                      displayDetails={handleRequestDetails}\n                                      handleDelete={handleDelete}\n                                      deleteKey={\"Delete Request\"}\n                                      updateKey={\"Update Status\"}\n                                      statusUpdate={handleStatusUpdate}\n                                    />\n                                  </span>\n                                </td>\n                              </tr>\n                            );\n                          })}\n                        </tbody>\n                      </Table>\n                    </Card>\n                  </div>\n                </Row>\n              </>\n            )}\n          </Container>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default LeaveHistory;\n","import React from \"react\";\nimport LeaveHistory from \"../../base/tables/users/Staff\";\n\nconst StaffLeaveHistory = () => {\n  return (\n    <div>\n      <h2>Leave History</h2>\n      <LeaveHistory />\n    </div>\n  );\n};\n\nexport default StaffLeaveHistory;\n"],"sourceRoot":""}