{"version":3,"sources":["views/base/title/Title.js","views/base/tables/adminLeaveRequest/LeaveRequest.js","views/pages/admin/LeaveRequests.js"],"names":["Title","containerClass","titleClass","title","lineClass","className","leaveRequests","staffId","name","type","starts","ends","duration","relieveStaff","status","LeaveRequests","history","useHistory","console","log","queryPage","useLocation","search","match","currentPage","Number","useState","page","setPage","handleRequestDetails","e","preventDefault","id","target","classList","push","useEffect","handleStatusUpdate","swal","content","style","border","onChange","setActionValue","value","buttons","cancel","confirm","dangerMode","closeOnClickOutside","then","a","handleDelete","Container","fluid","width","height","fontSize","length","Row","Card","Table","responsive","scope","map","entry","index","to","color","maxWidth","formatDistanceToNow","Date","addSuffix","updateKey","deleteKey","detailsKey","statusUpdate","displayDetails","props"],"mappings":"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","file":"static/js/12.0cafc829.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default function Title ({ containerClass, titleClass, title, lineClass }) {\n  return (\n    <div className={containerClass}>\n      <p className={titleClass}>{title}</p>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { Card, Table, Container, Row } from \"reactstrap\";\nimport Title from \"../../title/Title\";\nimport { Link } from \"react-router-dom\";\n// import { useDispatch } from \"react-redux\";\n// import { HashLink } from \"react-router-hash-link\";\nimport { formatDistanceToNow } from \"date-fns\";\nimport { TheHeaderDropdownTasks as Menu } from \"../../../../containers\";\nimport swal from \"@sweetalert/with-react\";\n\nconst leaveRequests = [\n  {\n    staffId: 1,\n    name: \"John Doe\",\n    type: \"Annual\",\n    starts: \"2020-10-31\",\n    ends: \"2020-10-31\",\n    duration: \"10\",\n    relieveStaff: \"Sodiq Ridwan\",\n    status: \"Pending\"\n  },\n  {\n    staffId: 2,\n    name: \"John Doe\",\n    type: \"Annual\",\n    starts: \"2020-10-31\",\n    ends: \"2020-10-31\",\n    duration: \"10\",\n    relieveStaff: \"Sodiq Ridwan\",\n    status: \"Pending\"\n  }\n];\n\nconst LeaveRequests = () => {\n  // const dispatch = useDispatch();\n  const history = useHistory();\n\n  console.log(history);\n  const queryPage = useLocation().search.match(/page=([0-9]+)/, \"\");\n  const currentPage = Number(queryPage && queryPage[1] ? queryPage[1] : 1);\n  const [page, setPage] = useState(currentPage);\n\n  // const pageChange = newPage => {\n  //   currentPage !== newPage && history.push(`/users?page=${newPage}`);\n  // };\n\n  const handleRequestDetails = e => {\n    e.preventDefault();\n    const id = e.target.classList[0];\n    console.log(e.target);\n    return history.push(`/admin/manage/${id}`);\n  };\n\n  useEffect(() => {\n    currentPage !== page && setPage(currentPage);\n  }, [currentPage, page]);\n\n  const handleStatusUpdate = e => {\n    e.preventDefault();\n    const id = e.target.classList[0];\n    swal(\"Update Leave Request Status\", {\n      content: (\n        <select className=\"form-control\" style={{ border: \"2px solid\" }} onChange={e => swal.setActionValue(e.target.value)}>\n          <option value=\"\">--Choose a Status--</option>\n          <option value=\"accept\">Accepted</option>\n          <option value=\"reject\">Rejected</option>\n          <option value=\"pending\">Pending</option>\n        </select>\n      ),\n      buttons: {\n        cancel: true,\n        confirm: \"Update!\"\n      },\n      dangerMode: true,\n      closeOnClickOutside: false\n    }).then(async value => {\n      // if (value) {\n      //   const response = await dispatch(updateStatus(id, value));\n      //   response.data\n      //     ? swal({\n      //         text: \"Update Successful\",\n      //         icon: \"success\",\n      //         button: false,\n      //         timer: 2000\n      //       })\n      //     : swal({\n      //         text: \"Error updating Status\",\n      //         icon: \"error\",\n      //         timer: 1500\n      //       });\n      // } else {\n      //   swal({\n      //     text: \"Update cancelled\",\n      //     icon: \"error\",\n      //     timer: 1200\n      //   });\n      // }\n    });\n  };\n  const handleDelete = () => {};\n\n  return (\n    <>\n      <div>\n        <div className=\"pb-5 pt-5 pt-md-8\">\n          <Container fluid style={{ width: \"97%\" }}>\n            {!leaveRequests && (\n              <div style={{ height: \"70vh\" }}>\n                <div className=\"bg-white\">\n                  <div\n                    className=\"d-flex flex-column justify-content-center align-items-center text-dark\"\n                    style={{ height: \"30vh\", fontSize: \"17px\" }}>\n                    <p className=\"pb-0 mb-1 font-weight-bold\">There are no competitions at the moment.</p>\n                    <p className=\"font-weight-bold\"> Competitions will display here when they are available</p>\n                  </div>\n                </div>\n              </div>\n            )}\n            {leaveRequests.length > 0 && (\n              <>\n                <Title titleClass=\"title text-white\" title=\"Leave Requests\" />\n                <Row>\n                  <div className=\"col\">\n                    <Card className=\"shadow p-0\">\n                      <Table className=\"align-items-center table-flush\" responsive>\n                        <thead className=\"thead-light\">\n                          <tr>\n                            <th scope=\"col\">ID</th>\n                            <th scope=\"col\">Name</th>\n                            <th scope=\"col\">Type</th>\n                            <th scope=\"col\">Starts</th>\n                            <th scope=\"col\">Ends</th>\n                            <th scope=\"col\">Duration</th>\n                            <th scope=\"col\">Relieve Staff</th>\n                            <th scope=\"col\">Status</th>\n                            <th scope=\"col\" />\n                          </tr>\n                        </thead>\n\n                        <tbody>\n                          {leaveRequests.map((entry, index) => {\n                            const { staffId, name, type, starts, ends, duration, relieveStaff, status } = entry;\n                            console.log(staffId);\n                            return (\n                              <tr key={index}>\n                                <th scope=\"row\">\n                                  <Link to={`/admin/competitions/${staffId}`} style={{ color: \"black\" }}>\n                                    <div className=\"pl-3\">\n                                      <span className=\"mb-0 text-sm d-inline-block text-truncate\" style={{ maxWidth: \"150px\" }}>\n                                        {staffId}\n                                      </span>\n                                    </div>\n                                  </Link>\n                                </th>\n                                <td>{name}</td>\n                                <td>\n                                  <div>{type}</div>\n                                </td>\n                                <td>\n                                  <div>{formatDistanceToNow(new Date(starts), { addSuffix: true })}</div>\n                                </td>\n                                <td>\n                                  <div>{formatDistanceToNow(new Date(ends), { addSuffix: true })}</div>\n                                </td>\n                                <td>\n                                  <div>{duration}</div>\n                                </td>\n                                <td>\n                                  <div>{relieveStaff}</div>\n                                </td>\n                                <td>\n                                  <div>{status}</div>\n                                </td>\n                                <td className=\"text-right\">\n                                  <span>\n                                    <Menu\n                                      updateKey={\"Update Request\"}\n                                      deleteKey={\"Delete Request\"}\n                                      detailsKey={\"View Request\"}\n                                      className={staffId}\n                                      statusUpdate={handleStatusUpdate}\n                                      handleDelete={handleDelete}\n                                      displayDetails={handleRequestDetails}\n                                    />\n                                  </span>\n                                </td>\n                              </tr>\n                            );\n                          })}\n                        </tbody>\n                      </Table>\n                    </Card>\n                  </div>\n                </Row>\n              </>\n            )}\n          </Container>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default LeaveRequests;\n","import React from \"react\";\nimport AdminLeaveRequests from \"../../base/tables/adminLeaveRequest/LeaveRequest\";\n\nconst LeaveRequests = props => {\n  return (\n    <div>\n      <AdminLeaveRequests />\n    </div>\n  );\n};\n\nexport default LeaveRequests;\n"],"sourceRoot":""}