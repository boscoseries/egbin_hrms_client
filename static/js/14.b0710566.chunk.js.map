{"version":3,"sources":["views/pages/admin/UpdateEmployee.js"],"names":["UpdateEmployeeForm","history","useHistory","dispatch","useDispatch","useState","staffdetails","setStaffDetails","users","useSelector","state","results","handeleInputChange","e","name","target","value","useLayoutEffect","fetchUsers","submitForm","a","createUser","id","push","console","log","className","xs","md","row","sm","htmlFor","placeholder","required","onChange","type","custom","length","map","usr","firstname","lastname","staff_id","size","color","onClick","goBack"],"mappings":"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","file":"static/js/14.b0710566.chunk.js","sourcesContent":["import React, { useState, useLayoutEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { createUser } from \"../../../redux/actions\";\nimport { useHistory } from \"react-router-dom\";\nimport { fetchUsers } from \"../../../redux/actions\";\nimport { CButton, CCard, CCardBody, CCardFooter, CCardHeader, CCol, CForm, CFormGroup, CInput, CLabel, CSelect, CRow } from \"@coreui/react\";\nimport CIcon from \"@coreui/icons-react\";\n\nconst UpdateEmployeeForm = () => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const [staffdetails, setStaffDetails] = useState({});\n  const state = useSelector(state => state);\n  const users = state.users.users.results;\n\n  const handeleInputChange = e => {\n    const name = e.target.name;\n    const value = e.target.value;\n    setStaffDetails(() => {\n      staffdetails[name] = value;\n      return { ...staffdetails };\n    });\n  };\n\n  useLayoutEffect(() => {\n    dispatch(fetchUsers());\n  }, [dispatch]);\n\n  const submitForm = async () => {\n    const response = await dispatch(createUser(staffdetails));\n    if (response.id) {\n      history.push(\"/admin/employees\");\n    }\n  };\n\n  console.log(staffdetails);\n\n  return (\n    <>\n      <CRow className=\"d-flex justify-content-center\">\n        <CCol xs=\"12\" md=\"6\">\n          <CCard>\n            <CCardHeader className=\"p-8 \">\n              <strong>Onboard New Employee</strong>\n            </CCardHeader>\n            <CCardBody>\n              <CForm className=\"form-horizontal\">\n                <CFormGroup row>\n                  <CCol md=\"6\">\n                    <CLabel>\n                      <strong>Input Employee Details</strong>\n                    </CLabel>\n                  </CCol>\n                </CFormGroup>\n                <CFormGroup row>\n                  <CCol sm=\"12\" md=\"4\">\n                    <CLabel htmlFor=\"lastname\">Lastname</CLabel>\n                    <CInput id=\"lastname\" name=\"lastname\" placeholder=\"Lastname\" required onChange={handeleInputChange} />\n                  </CCol>\n                  <CCol sm=\"12\" md=\"4\">\n                    <CLabel htmlFor=\"firstname\">FIrstname</CLabel>\n                    <CInput id=\"firstname\" name=\"firstname\" placeholder=\"Firstname\" required onChange={handeleInputChange} />\n                  </CCol>\n                  <CCol sm=\"12\" md=\"4\">\n                    <CLabel htmlFor=\"middlename\">Othernames</CLabel>\n                    <CInput id=\"middlename\" name=\"middlename\" placeholder=\"middlename\" onChange={handeleInputChange} />\n                  </CCol>\n                </CFormGroup>\n                <CFormGroup row>\n                  <CCol sm=\"12\" md=\"4\">\n                    <CLabel htmlFor=\"annual_leave\">Annual Leave Bal.</CLabel>\n                    <CInput id=\"annual_leave\" name=\"annual_leave\" type=\"number\" placeholder=\"No of days\" required onChange={handeleInputChange} />\n                  </CCol>\n                  <CCol sm=\"12\" md=\"4\">\n                    <CLabel htmlFor=\"sick_leave\">Sick Leave Bal.</CLabel>\n                    <CInput id=\"sick_leave\" name=\"sick_leave\" type=\"number\" placeholder=\"No of days\" required onChange={handeleInputChange} />\n                  </CCol>\n                  <CCol sm=\"12\" md=\"4\">\n                    <CLabel htmlFor=\"exam_leave\">Exam Leave Bal.</CLabel>\n                    <CInput id=\"othernames\" name=\"exam_leave\" type=\"number\" placeholder=\"No of days\" onChange={handeleInputChange} />\n                  </CCol>\n                </CFormGroup>\n\n                <CFormGroup row>\n                  <CCol md=\"6\">\n                    <CLabel htmlFor=\"compassionate_leave\">Compassionate Leave Bal</CLabel>\n                    <CInput\n                      id=\"compassionate_leave\"\n                      name=\"compassionate_leave\"\n                      type=\"number\"\n                      placeholder=\"No of days\"\n                      onChange={handeleInputChange}\n                    />\n                  </CCol>\n                  <CCol md=\"6\">\n                    <CLabel htmlFor=\"staff_id\">Staff ID</CLabel>\n                    <CInput id=\"staff_id\" name=\"staff_id\" placeholder=\"Employee ID No.\" onChange={handeleInputChange} />\n                  </CCol>\n                </CFormGroup>\n\n                <CFormGroup row>\n                  <CCol sm=\"12\" md=\"6\">\n                    <CLabel htmlFor=\"line_manager\">Direct Line Manager</CLabel>\n                    <CSelect custom name=\"line_manager\" id=\"line_manager\" onChange={handeleInputChange}>\n                      <option value=\"0\">Select Employee</option>\n                      {users &&\n                        users.length &&\n                        users.map(usr => <option key={usr.staff_id} value={usr.id}>{`${usr.firstname} ${usr.lastname}`}</option>)}\n                    </CSelect>\n                  </CCol>\n                  <CCol md=\"6\">\n                    <CLabel htmlFor=\"role\">Role</CLabel>\n                    <CSelect custom name=\"role\" id=\"role\" onChange={handeleInputChange}>\n                      <option value=\"\">Select Role</option>\n                      <option value=\"ADMIN\">ADMIN</option>\n                      <option value=\"STAFF\">STAFF</option>\n                      <option value=\"MANAGER\">LINE MANAGER</option>\n                    </CSelect>\n                  </CCol>\n                </CFormGroup>\n              </CForm>\n            </CCardBody>\n            <CCardFooter className=\"d-flex justify-content-between\">\n              <CButton type=\"submit\" size=\"sm\" color=\"primary\" onClick={submitForm}>\n                <CIcon name=\"cil-scrubber\" /> Submit\n              </CButton>\n              <CButton type=\"reset\" size=\"sm\" color=\"danger\" onClick={() => history.goBack()}>\n                <CIcon name=\"cil-ban\" /> Cancel\n              </CButton>\n            </CCardFooter>\n          </CCard>\n        </CCol>\n      </CRow>\n    </>\n  );\n};\n\nexport default UpdateEmployeeForm;\n"],"sourceRoot":""}